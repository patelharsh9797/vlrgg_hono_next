import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Providers } from "@/components/providers";
import "./globals.css";
import {
  dehydrate,
  HydrationBoundary,
  QueryClient,
} from "@tanstack/react-query";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  /**
   * This is the intended way to prefetch data on the server to have it immediately available in the client.
   * But: you could also just pass the post as a prop instead of using the `HydrationBoundary`
   */
  const queryClient = new QueryClient();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} relative h-full font-sans bg-brand-50 text-brand-950 antialiased`}
      >
        <Providers>
          <HydrationBoundary state={dehydrate(queryClient)}>
          <main className="relative flex min-h-screen max-w-8xl mx-auto flex-col">
                <div className="flex-1 flex-grow">{children}</div>
              </main>
          </HydrationBoundary>
        </Providers>
      </body>
    </html>
  );
}
